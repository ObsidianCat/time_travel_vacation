"use strict";var __decorate=this&&this.__decorate||function(e,t,r,n){var o,a=arguments.length,i=3>a?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(3>a?o(i):a>3?o(t,r,i):o(t,r))||i);return a>3&&i&&Object.defineProperty(t,r,i),i},__metadata=this&&this.__metadata||function(e,t){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(e,t):void 0},core_1=require("@angular/core"),destination_data_handler_service_1=require("../services/destination-data-handler.service"),constants_shared_1=require("../shared/constants.shared"),PeriodFinderComponent=function(){function e(e){this.dataHandlerService=e,this.active=!0,this.submitted=!1,this.gotSearchResults=new core_1.EventEmitter,this.model={start:{name:"periodStart",date:constants_shared_1.TIME_RANGE.START},end:{name:"periodEnd",date:constants_shared_1.TIME_RANGE.END}}}return e.prototype.onSubmit=function(){var e=this;this.submitted=!0,this.dataHandlerService.getDestinationsByPeriod(this.model).then(function(t){console.log(t),e.gotSearchResults.emit(t)})["catch"](function(e){console.error(e)})},Object.defineProperty(e.prototype,"diagnostic",{get:function(){return JSON.stringify(this.model)},enumerable:!0,configurable:!0}),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"gotSearchResults",void 0),e=__decorate([core_1.Component({templateUrl:"vacation-chooser/templates/period-finder.component.html",selector:"period-finder"}),__metadata("design:paramtypes",[destination_data_handler_service_1.DestinationDataHandlerService])],e)}();exports.PeriodFinderComponent=PeriodFinderComponent;